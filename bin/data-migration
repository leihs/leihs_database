

function db_prepare_001 {
  terminate_connections
  dropdb --if-exists $PGDATABASE
  createdb $PGDATABASE
  VERSION=001 bundle exec rake db:migrate
}

################################################################################

function db_restore_001_data {
  NAME_PREFIX=$1

  ON_ERROR_STOP='on' \
    psql -d $PGDATABASE \
      --single-transaction --quiet --echo-errors \
      -c 'SET session_replication_role = REPLICA;' \
      -f "db/${NAME_PREFIX}_001.sql" \
      -c 'SET session_replication_role = DEFAULT;'

}


function db_dump_full {
  NAME_PREFIX=$1
  FILE="db/${NAME_PREFIX}.pgbin"
  psql -d $PGDATABASE -c \
    "TRUNCATE ar_internal_metadata, audited_changes, audited_requests, audited_responses CASCADE;"
  pg_dump \
    $PGDATABASE \
    --no-owner --no-privileges \
    --format c --file $FILE
}

################################################################################

function db_dump_data {

  NAME_PREFIX=$1
  FILE="db/${NAME_PREFIX}.sql"

  psql -d $PGDATABASE -c "ALTER DATABASE ${PGDATABASE} SET TimeZone = 'UTC';"


cat <<-SQL > $FILE
  --
  -- DO NOT EDIT
  -- 
  -- this file is automatically generated 
  -- it represents the current migration setatus but it is not the authoritative source
  --

SQL


  pg_dump --data-only --inserts --column-inserts \
    --no-owner --no-privileges \
    -T schema_migrations  -T ar_internal_metadata \
    -T audited_changes -T audited_requests -T audited_responses \
    $PGDATABASE >> $FILE

}



################################################################################

function db_check_migrated {

  NAME_PREFIX=$1
  FILE="db/${NAME_PREFIX}.pgbin"


  terminate_connections
  dropdb --if-exists $PGDATABASE
  createdb $PGDATABASE

  pg_restore  "$FILE" -d $PGDATABASE \
    --no-owner --no-privileges \
    --exit-on-error --single-transaction 

  if bundle exec rake db:migrate:status | grep -q -E "\s*down\s*\d*\s*"; then
    echo "ERROR $NAME_PREFIX has pending migrations"
    exit 1
  else
    echo "OK $NAME_PREFIX migrations are up to date"
    exit 0
  fi

}





# vi: ft=bash
#
